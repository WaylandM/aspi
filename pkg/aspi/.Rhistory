list.files()
sim
sim <- read.csv("simulated_symmetrical_infection.csv")
View(sim)
g.test(sim)
g.test(sim[,2:3])
sim
sample(90:110,2)
sample(90:110,2)
sample(90:110,2)
sample(90:110,2)
sample(90:110,2)
sample(90:110,2)
sample(90:110,2)
sample(90:110,2)
sample(90:110,2)
sim[9,2] <- 98
sim[9,3] <- 108
sim
g.test(sim)
g.test(sim[,2:3])
write.csv(sim, "simulated_symmetrical_infection.csv", quote=F)
homo
leftHomo <- read.csv("simulated_left_bias_homogeneous_proportions.csv")
g.test(leftHomo)
g.test(leftHomo[,2:3])
leftHetero <- read.csv("simulated_left_bias_heterogeneous_proportions.csv")
g.test(leftHetero[,2:3])
as
asym
asym <- read.csv("simulated_asymmetry_inconsistent_bias.csv")
g.test(asym)
g.test(asym[,2:3])
asym[3,2] <- 74
asym[3,3] <- 195
asym[8,2] <- 75
asym[8,3] <- 106
g.test(asym[,2:3])
write.csv(asym, "simulated_asymmetry_inconsistent_bias.csv", quote=F)
shiny::runGitHub(repo="aspi", username="waylandm", subdir="gui")
x <- c(1,2)
x
getwd()
setwd("Dropbox/bilateral_asymmetry/bilateral_asymmetry_analysis/pkg/aspi/data/")
setwd("..")
getwd()
load("data/diplostomum_eyes_excl_lenses.rda")
ls()
names(diplostomum_eyes_excl_lenses)
rm(list=ls())
devtools::load_all()
?diplostomum_eye_excl_lenses
devtools::load_all()
?aspi
??aspi
?diplostomum
?diplostomum_eyes_excl_lenses
diplostomum_eyes_excl_lenses
devtools::document()
devtools::load_all()
?diplostomum_eyes_excl_lenses
devtools::document()
devtools::load_all()
?diplostomum_eyes_excl_lenses
library(ggplot2)
?diamonds
?diplostomum_eyes_excl_lenses
?diamonds
?diplostomum_eyes_excl_lenses
devtools::document()
devtools::load_all()
?diplostomum_eyes_excl_lenses
devtools::document()
devtools::load_all()
?diplostomum_eyes_excl_lenses
?diplostomum_lenses
.libPaths()
devtools::document()
devtools::load_all()
?diplostomum_eyes_excl_lenses
devtools::document()
devtools::load_all()
?diplostomum_eyes_excl_lenses
g.test
?g.test
devtools::document()
devtools::load_all()
?simulated_symmetrical_infection
?aspi
??aspi
aspi::eb.test()
?t.test
?ks.test
aspi::.prepareData()
devtools::document()
devtools::load_all()
?g.test
devtools::document()
devtools::load_all()
?g.test
devtools::document()
devtools::document()
devtools::load_all()
?g.test
devtools::document()
devtools::load_all()
?g.test
devtools::document()
devtools::load_all()
?g.test
devtools::document()
devtools::load_all()
?g.test
devtools::document()
devtools::load_all()
?g.test
?g.test
devtools::document()
devtools::load_all()
?g.test
?devtools
?description
?desc
g.test(diplostomum_lenses)
?hist
?t.test
devtools::document()
devtools::load_all()
?g.test
devtools::document()
devtools::load_all()
?g.test
devtools::document()
devtools::load_all()
?g.test
devtools::document()
devtools::load_all()
?g.test
devtools::document()
devtools::load_all()
?g.test
.prepareData
devtools::document()
devtools::load_all()
.prepareData
packageDescription(aspi)
packageVersion(aspi)
devtools::document()
devtools::document()
devtools::load_all()
?aspi
??aspi
library(EBImage)
?EBImage
devtools::document()
devtools::load_all()
?g.test
devtools::document()
devtools::load_all()
?aspi
?foo
devtools::document()
devtools::load_all()
?aspi
devtools::document()
devtools::load_all()
?aspi
devtools::document()
devtools::load_all()
?aspi
?EBImage
?aspi
devtools::document()
devtools::load_all()
?aspi
devtools::document()
devtools::load_all()
?aspi
devtools::document()
devtools::load_all()
?aspi
devtools::document()
devtools::load_all()
?aspi
g.test(diplostomum_eyes_excl_lenses)
g.test(diplostomum_lenses)
devtools::document()
devtools::load_all()
?aspi
?simulated_symmetrical_infection
?t.test
?ks.test
devtools::document()
devtools::load_all()
?aspi
?g.test
devtools::document()
devtools::load_all()
?eb.test
devtools::document()
devtools::load_all()
?eb.test
?t-test
?t.test
?"hist"
devtools::document()
devtools::load_all()
?plotHistogram
?g.test
?plotHistogram
?"hist"
devtools::document()
devtools::load_all()
?plotHistogram
devtools::document()
devtools::load_all()
?plotHistogram
devtools::document()
devtools::load_all()
?plotHistogram
devtools::document()
devtools::load_all()
?plotHistogram
?g.test
?eb.test
?t.test
devtools::document()
devtools::load_all()
?g.test
devtools::document()
devtools::load_all()
?g.test
?eb.test
devtools::document()
devtools::load_all()
?eb.test
devtools::document()
devtools::load_all()
?plotHistogram
devtools::document()
devtools::load_all()
?plotVolcano
devtools::document()
devtools::document()
devtools::load_all()
?plotVolcano
?aspi
devtools::document()
devtools::load_all()
?plotVolcano
plotVolcano(diplostomum_eyes_excl_lenses)
plotVolcano(diplostomum_eyes_excl_lenses, test="G", pAdj="EB", sigThresh=0.1, main="Diplostomum metacercariae in eyes of ruffe")
?plotHistogram
plotHistogram(diplostomum_eyes_excl_lenses)
plotHistogram(diplostomum_eyes_excl_lenses,nBreaks=20,main="Diplostomum metacercariae in eyes of ruffe")
browseVignettes(aspi)
browseVignettes('aspi')
browseVignettes(devtools)
browseVignettes('devtools')
devtools::use_testthat()
?aspi
g.test(diplostomum_lenses)
devtools::test()
devtools::test()
getwd()
devtools::load_all()
devtools::test()
devtools::test
devtools::test()
devtools::test()
devtools::test()
test()
devtools::test()
devtools::test()
devtools::load_all()
devtools::test()
devtools::load_all()
devtools::test()
devtools::load_all()
devtools::test()
devtools::test()
?aspi
eb.test(diplostomum_lenses)
length(eb.test(diplostomum_lenses))
result <- eb.test(diplostomum_lenses)
length(result)
is.numeric(result[1])
result
is.numeric(result$pooled)
names(result)
length(result$hosts[,1])
devtools::test()
devtools::test()
devtools::test()
length(result$hosts[,1])
devtools::test()
devtools::test()
?expect_equal
devtools::test()
result <- eb.test(diplostomum_lenses)
host28 <- result$hosts[3,]
host28
host28$Left
host28$Right
host28$Host
as.numeric(host28$Host)
as.numeric(as.character(host28$Host))
host28$p
host28$BH
host28$Holm
devtools::test()
devtools::test()
devtools::test()
devtools::test()
devtools::test()
ls()
fix(result)
fix(result$hosts)
x <- result$hosts
fix(x)
result <- g.test(diplostomum_eyes_excl_lenses)
result
result$summary
result$hosts
result$summary$Test
result$summary$Test[1]
result$summary$Test[2]
result$summary$Test[3]
devtools::test()
devtools::test()
result$summary
devtools::test()
devtools::test()
devtools::test()
devtools::test()
result$summary$df[1]
result$summary$G[1]
devtools::load_all()
devtools::test()
result <- g.test(diplostomum_eyes_excl_lenses)
result$summary$df[3]
x <- result$summary
x
x[1,3]
calcG <- function(fL, fR, df=1){
fSum <- fL+fR
G <- 2*(fL*log(fL/(fSum*0.5)) + fR*log(fR/(fSum*0.5)))
pval <- pchisq(G, df, lower.tail=F)
return(c(G, pval))
}
# G for each individual host GI
individualG <- apply(x, 1, function(r){
return(calcG(r[1],r[2]))
})
calcG <- function(fL, fR, df=1){
fSum <- fL+fR
G <- 2*(fL*log(fL/(fSum*0.5)) + fR*log(fR/(fSum*0.5)))
pval <- pchisq(G, df, lower.tail=F)
return(c(G, pval))
}
calcG(10,10,1)
y <- calcG(10,10)
y[1]
y[2]
ls()
result$hosts
storage.mode(result$hosts)
rh <- result$hosts
rh[1,]
rh$Host
rh$Left
rh$Right
rh$G
devtools::load_all()
devtools::test()
rm(list=ls())
devtools::load_all()
devtools::test()
devtools::test()
result <- g.test(diplostomum_eyes_excl_lenses)
result$hosts
devtools::test()
devtools::test()
devtools::test()
devtools::test()
devtools::test()
devtools::test()
devtools::test()
devtools::test()
devtools::test()
devtools::test()
devtools::check()
devtools::test()
run_examples()
devtools::run_examples()
devtools::check_docs()
getwd()
library(aspi)
devtools::install()
library(aspi)
getwd()
ls()
.libPaths()
devtools::install()
library(aspi)
devtools::build()
devtools::install()
library(aspi)
devtools::load_all()
?g.test
mtcars
devtools::install()
g.test
library(aspi)
devtools::install()
devtools::build()
devtools::install()
install("~/git_repositories/aspi/pkg/aspi_0.2.tar.gz")
install.packages("~/git_repositories/aspi/pkg/aspi_0.2.tar.gz")
INSTALL("~/git_repositories/aspi/pkg/aspi_0.2.tar.gz")
install.packages("~/git_repositories/aspi/pkg/aspi_0.2.tar.gz", repos = NULL, type = "source")
library(aspi)
.libPaths
.libPaths()
library(aspi)
library(aspi, lib.loc="/Library/Frameworks/R.framework/Versions/3.3/Resources/library")
?library
install.packages("~/git_repositories/aspi/pkg/aspi_0.2.tar.gz", repos = NULL, type = "source")
library(aspi)
library(/Library/Frameworks/R.framework/Versions/3.3/Resources/library/aspi)
library(aspi, lib.loc="//Library//Frameworks//R.framework//Versions//3.3//Resources//library")
.libPaths()
library(aspi)
library(aspi)
.g.test
build()
library(devtools)
build()
install()
library(aspi)
build()
install()
library(aspi)
build(vignettes=F)
install.packages("/Users/matt/git_repositories/aspi/pkg/aspi_0.2.tar.gz")
install("/Users/matt/git_repositories/aspi/pkg/aspi_0.2.tar.gz")
install("/Users/matt/git_repositories/aspi/pkg/aspi)
)
)))
}
{}
{}}
/
@
""
)
"
install("/Users/matt/git_repositories/aspi/pkg/aspi")
?install
uninstall(aspi)
library(aspi)
build()
library(aspi)
installed.packages()
?installed.packages
install.packages("/Users/matt/git_repositories/aspi/pkg/aspi_0.2.tar.gz", type=source())
install.packages("/Users/matt/git_repositories/aspi/pkg/aspi_0.2.tar.gz", type=source
)
install.packages("/Users/matt/git_repositories/aspi/pkg/aspi_0.2.tar.gz", type="source")
devtools::install(type="source")
devtools::install_github("hadley/devtools")
getwd()
library(devtools)
build()
install()
library(aspi)
?install
install_github("waylandm/aspi", subdir="pkg/aspi")
library(aspi)
?g.test
devtools::load_all
devtools::load_all()
?g.test
?devtools::load_all
build()
install()
library(aspi)
ls()
getwd()
build()
library(devtools)
build()
install()
library(aspi)
library(devtools)
build()
install()
library(aspi)
library(aspi)
library(aspi)
document()
build()
install()
library(aspi)
check()
.libPaths()
getwd()
setwd("~tmp/aspi")
setwd("/Users/matt/tmp/aspi/")
getwd()
library(devtools)
check()
