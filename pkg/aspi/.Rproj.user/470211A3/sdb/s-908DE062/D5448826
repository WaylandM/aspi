{
    "contents" : "##################################################################################\n#                                                                                #\n#  Analysis of Symmetry of Parasitic Infections (ASPI)                           #\n#                                                                                #\n#  Version 0.2                                                                   #\n#                                                                                #\n#  Copyright (C) 2016 Matthew Thomas Wayland                                     #\n#                                                                                #\n#  This file is part of Analysis of Symmetry of Parasitic Infections.            #\n#                                                                                #\n#  Analysis of Symmetry of Parasitic Infections is free software: you can        #\n#  redistribute it and/or modify it under the terms of the GNU General Public    #\n#  License as published by the Free Software Foundation, either version 3 of     #\n#  the License, or (at your option) any later version.                           #\n#                                                                                #\n#  Analysis of Symmetry of Parasitic Infections is distributed in the hope that  #\n#  it will be useful, but WITHOUT ANY WARRANTY; without even the implied         #\n#  warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the     #\n#  GNU General Public License for more details.                                  #\n#                                                                                #\n#  You should have received a copy of the GNU General Public License along       #\n#  with Analysis of Symmetry of Parasitic Infections.                            #\n#  If not, see <http://www.gnu.org/licenses/>.                                   #\n#                                                                                #\n#                                                                                #\n##################################################################################\n\n# check data format and remove uninfected hosts\n.prepareData <- function(x){\n  x <- as.data.frame(x)\n\n  if(length(x[1,])!=2)\n    stop(\"x must contain exactly 2 columns\")\n\n  if(length(x[,1])<1)\n    stop(\"x must contain data for at least one host\")\n\n  if(!is.numeric(x[,1]) | !is.numeric(x[,2]))\n    stop(\"Both columns of x must be numeric\")\n\n  return(x[apply(x,1,sum)>0,])\n}\n\n#'Replicated G-tests of goodness-of-fit\n#'@description Perform replicated G-tests of goodness-of-fit to assess symmetry of parasitic infections.\n#'@param x a matrix or data frame with two numeric columns; \n#'first column is for left-side and 2nd column for right-side. \n#'Identifiers for hosts can be provided as row names.\n#'@details\n#'This function implements Sokal & Rohlf's (1995) G-test for the specific case of an expected 1:1 ratio\n#'The function takes as its argument a matrix or data frame with two numeric columns; first column is for\n#'left-side and 2nd column for right-side. Identifiers for hosts can be provided as row names. Uninfected \n#' hosts (zero count for both left and right sides) are ignored. Cannot be applied to data containing zero\n#' counts; use eb.test instead.\n\n#'@return\n#'A list containing two data.frames:\n#'  \\item{summary}{results of total, heterogeneity and pooled G-tests.\n#'    Data frame has four columns: test, degrees of freedom, G-statistic and p-value.}\n#'  \\item{hosts}{results of individual G-tests on distribution of parasites in each host.\n#'    Data frame has seven columns: Host (ID), Left (count of parasites on left side), \n#'    Right (count of parasites on right side), G (G-statistic), p (p-value), BH (p-value adjusted\n#'    using Benjamini and Hochberg's procedure for controlling the false discovery rate) and Holm (p-value \n#'    adjusted using Holm's method).}\n#'@references\n#'R.R. Sokal & F.J. Rohlf (1995) Biometry. 3rd Edition. New York: W.H. Freeman and Company. 887 pp.\n#'@examples\n#'g.test(diplostomum_eyes_excl_lenses)\n#'@export\n\ng.test <- function(x){\n  # prepare data\n  x <- .prepareData(x)\n\n  # check for zero counts\n  if(sum(x==0)!=0)\n    stop(\"Data contains zero counts!\")\n\n  calcG <- function(fL, fR, df=1){\n    fSum <- fL+fR\n    G <- 2*(fL*log(fL/(fSum*0.5)) + fR*log(fR/(fSum*0.5)))\n    pval <- pchisq(G, df, lower.tail=F)\n    return(c(G, pval))\n  }\n\n  # G for each individual host GI\n  individualG <- apply(x, 1, function(r){\n    return(calcG(r[1],r[2]))\n  })\n\n  Holm <- p.adjust(individualG[2,], 'holm')\n  BH <- p.adjust(individualG[2,], 'BH')\n\n  individualG <- as.data.frame(cbind(row.names(x), x, t(individualG), BH, Holm))\n  names(individualG) <- c(\"Host\", \"Left\", \"Right\", \"G\", \"p\", \"BH\", \"Holm\")\n\n  # Total G (GT)\n  GT <- sum(individualG$G)\n  dfGT <- length(individualG$G)\n  pGT <- pchisq(GT, dfGT, lower.tail=F)\n\n  # Pooled G (GP)\n  pooledResult <- calcG(sum(x[,1]), sum(x[,2]))\n  GP <- pooledResult[1]\n  pGP <- pooledResult[2]\n\n  # Heterogeneity G (GH)\n  GH <- GT - GP\n  dfGH <- dfGT-1\n  pGH <- pchisq(GH, dfGH, lower.tail=F)\n\n  # prepare output\n  testSummary <- as.data.frame(cbind(c(\"Pooled\", \"Heterogeneity\", \"Total\"), c(1, dfGH, dfGT), c(GP, GH, GT), c(pGP, pGH, pGT)))\n  names(testSummary) <- c(\"Test\", \"df\", \"G\", \"p\")\n  testSummary$df <- as.numeric(as.character(testSummary$df))\n  testSummary$G <- as.numeric(as.character(testSummary$G))\n  testSummary$p <- as.numeric(as.character(testSummary$p))\n\n  output <- list(testSummary, individualG)\n  names(output) <- c(\"summary\", \"hosts\")\n  return(output)\n\n}\n\n#'Exact binomial tests\n#'@description Assess symmetry of parasitic infections by performing exact binomial tests on pooled data and\n#'individual hosts.\n#'@param x a matrix or data frame with two numeric columns; \n#'first column is for left-side and 2nd column for right-side. \n#'Identifiers for hosts can be provided as row names.\n#'@details\n#'This function performs a binomial exact tests with the null hypothesis of a 1:1 ratio. It takes \n#' as its argument a matrix or data frame with two numeric columns; first column is for left-side \n#' and 2nd column for right-side. Identifiers for hosts can be provided as row names. Uninfected \n#' hosts (zero count for both left and right sides) are ignored.\n\n#'@return\n#'It returns a list containing two elements:\n#'  \\item{pooled}{p-value for pooled binomial exact test (null hypothesis: the ratio of the total \n#'  number of parasites from each side doesn't differ from 1:1).}\n#'  \\item{hosts}{data.frame of results of binomial exact tests performed on the distribution of \n#'  parasites in each host.}\n#'\n#'@examples\n#'eb.test(diplostomum_lenses)\n#'@export\n\neb.test <- function(x){\n\n  # prepare data\n  x <- .prepareData(x)\n\n  binomTestP <- function(fL, fR){\n    return(binom.test(fL, fL+fR, p=0.5, alternative='two.sided')$p.value)\n  }\n\n  # Binomial tests for individual hosts\n  individualP <- apply(x, 1, function(r){\n    return(binomTestP(r[1],r[2]))\n  })\n\n  Holm <- p.adjust(individualP, 'holm')\n  BH <- p.adjust(individualP, 'BH')\n\n  individualP <- as.data.frame(cbind(row.names(x), x, individualP, BH, Holm))\n  names(individualP) <- c(\"Host\", \"Left\", \"Right\", \"p\", \"BH\", \"Holm\")\n\n  # Binomial tests for pooled hosts\n  fLSum <- sum(x[,1])\n  fRSum <- sum(x[,2])\n\n  pooledP <- binomTestP(fLSum, fRSum)\n\n  output <- list(pooledP, individualP)\n  names(output) <- c(\"pooled\", \"hosts\")\n  return(output)\n\n}\n\n#'Plot histogram\n#'@description Creates a histogram showing distribution of fold differences\n#'in abundance of parasites between left and right sides of host.\n#'@param x a matrix or data frame with two numeric columns; \n#'first column is for left-side and 2nd column for right-side. \n#'Identifiers for hosts can be provided as row names.\n#'@param nBreaks number of cells for the histogram. A suggestion\n#'only; breakpoints will be set to pretty values.\n#'@param ... optional further arguments and graphical parameters\n#'passed to plot.\n#'\n#'@details\n#' plot.Histogram creates a histogram showing distribution of fold differences \n#' in abundance of parasites between left and right sides. For each infected host the \n#' number of parasites on the right side is divided by the number of parasites \n#' on the left side, and the result binary log transformed. The log2 ratio will \n#' be negative if there are more parasites on the left than right and positive \n#' if there are more parasites on the right than left. A log2 ratio of one \n#' corresponds to a one-fold difference, i.e. double the number of parasites. \n#' Perfect symmetry is a log2 ratio of zero.\n#'\n#'@examples\n#'plotHistogram(diplostomum_eyes_excl_lenses)\n#'plotHistogram(diplostomum_eyes_excl_lenses,nBreaks=20,main=\"Diplostomum metacercariae in eyes of ruffe\")\n#'@export\nplotHistogram <- function(x, nBreaks=10, ...){\n  # prepare data\n  x <- .prepareData(x)\n\n  if(sum(x==0)!=0)\n    stop(\"Data contains zero counts!\")\n\n  logRatios <- log2(x[,2]/x[,1])\n  bins <- pretty(c(min(logRatios), max(logRatios)), n=as.numeric(nBreaks)+1)\n  #bins <- pretty(c(min(logRatios()), max(logRatios())), n=as.numeric(input$nBreaks)+1)\n  histColours <- c(rep(\"#4DAF4A\", sum(bins<0)), rep(\"#984EA3\", sum(bins>0)))\n  hist(logRatios, col=histColours, breaks=bins, xlab=expression(paste(\"log\"[2],\"(right/left)\")), ...)\n}\n\n#'Volcano plot\n#'@description Produces scatterplot of statistical significance vs fold difference in parasite abundance \n#'between left and right.\n#'@param x a matrix or data frame with two numeric columns; first column is for left-side and 2nd column \n#'for right-side. Identifiers for hosts can be provided as row names.\n#'@param test if set to \"G\" (default) a G-test is performed; otherwise an exact binomial test is performed.\n#'@param pAdj method for correcting p-values for multiple comparisons. If set to \"BH\" (default), Benjamini \n#'& Hochberg's procedure is used to control the false discovery rate (FDR); otherwise Holm's methos is used \n#'to control the familywise error rate (FWER).\n#'@param sigThresh significance threshold (defaults to 0.05); p-values below this value will be called significant.\n#'@param ... optional further arguments and graphical parameters passed to plot.\n#'@details plot.Volcano creates a volcano plot, i.e. a scatterplot of statistical significance \n#'(-log10(p-value)) vs fold difference (log2 ratio - as calculated for the histogram above) \n#'in parasite abundance between left and right. Each point in the scatterplot represents the \n#'parasite distribution in an individual host. A dashed horizontal line represents the user-defined \n#'p-value threshold for significance. If a parasite distribution deviates significantly from symmetry \n#'it is shown as a red square, otherwise as a blue circle.\n#'@examples\n#'plotVolcano(diplostomum_eyes_excl_lenses)\n#'plotVolcano(diplostomum_eyes_excl_lenses, test=\"G\", pAdj=\"EB\", sigThresh=0.1, main=\"Diplostomum metacercariae in eyes of ruffe\")\n#'@export\nplotVolcano <- function(x, test=\"G\", pAdj=\"BH\", sigThresh=0.05, ...){\n  # prepare data\n  x <- .prepareData(x)\n\n  if(sum(x==0)!=0)\n    stop(\"Data contains zero counts!\")\n\n  if(test==\"G\"){\n    testResults <- g.test(x)\n  }else{\n    testResults <- eb.test(x)\n  }\n\n  if(pAdj==\"BH\"){\n    log10p <- log10(testResults$hosts$BH)\n  }else{\n    log10p <- log10(testResults$hosts$Holm)\n  }\n\n  logRatios <- log2(x[,2]/x[,1])\n  plotColours <- ifelse(log10p < log10(as.numeric(sigThresh)), \"#E41A1C\", \"#377EB8\")\n  plotSymbols <- ifelse(log10p < log10(as.numeric(sigThresh)), 15, 16)\n  plot(logRatios, -log10p,  col=plotColours, pch = plotSymbols, xlab=expression(paste(\"log\"[2],\"(right/left)\")), ylab=expression(paste(\"-log\"[10],\"(p-value)\")), ...)\n  abline(h=-log10(as.numeric(sigThresh)), col=\"gray10\", lty=2)\n}\n\n\n",
    "created" : 1474281342001.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "581394783",
    "id" : "D5448826",
    "lastKnownWriteTime" : 1474233533,
    "path" : "~/Dropbox/bilateral_asymmetry/bilateral_asymmetry_analysis/pkg/aspi/R/functions.R",
    "project_path" : "R/functions.R",
    "properties" : {
    },
    "relative_order" : 7,
    "source_on_save" : false,
    "type" : "r_source"
}